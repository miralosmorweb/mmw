{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/calendar/calendar.component.ts","./src/app/components/calendar/calendar.component.html","./src/app/components/calendar/custom-event-title-formatter.provider.ts","./src/app/components/cast-slideshow/cast-slideshow.component.ts","./src/app/components/cast-slideshow/cast-slideshow.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/list-card/list-card.component.ts","./src/app/components/list-card/list-card.component.html","./src/app/components/list/list.component.ts","./src/app/components/list/list.component.html","./src/app/components/lists/lists.component.ts","./src/app/components/lists/lists.component.html","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/components/movies-grid/movies-grid.component.ts","./src/app/components/movies-grid/movies-grid.component.html","./src/app/components/oscalo/oscalo.component.ts","./src/app/components/oscalo/oscalo.component.html","./src/app/components/padlet/padlet.component.ts","./src/app/components/padlet/padlet.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/shared/footer/footer.component.ts","./src/app/components/shared/footer/footer.component.html","./src/app/components/shared/navbar/navbar.component.ts","./src/app/components/shared/navbar/navbar.component.html","./src/app/components/slideshow/slideshow.component.ts","./src/app/components/slideshow/slideshow.component.html","./src/app/pipes/poster.pipe.ts","./src/app/services/events.service.ts","./src/app/services/lists.service.ts","./src/app/shared/interfaces.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\nimport { ListsService } from './services/lists.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  providers: [ListsService]\r\n})\r\nexport class AppComponent {\r\n  title = 'miralosmorweb';\r\n  lists: any[] = [];\r\n\r\n  constructor(protected _listsService: ListsService){  }\r\n\r\n  ngOnInit(): void {\r\n    this._listsService.getLists().subscribe( (data) => {\r\n      this.lists = data['results'];\r\n    },\r\n    (error) => {\r\n      console.error(error);\r\n    }\r\n    );\r\n  }\r\n  \r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<section class=\"container\">\r\n\r\n\r\n    <router-outlet></router-outlet>\r\n</section>\r\n\r\n<app-footer class=\"mt-auto\"></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\n\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n//Rutas\r\nimport { APP_ROUTING, FeatureRoutingModule } from './app.routes';\r\n\r\n//Servicios\r\nimport { ListsService } from './services/lists.service';\r\nimport { EventsService } from './services/events.service';\r\n\r\n\r\n//Componentes\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ListsComponent } from './components/lists/lists.component';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { ListCardComponent } from './components/list-card/list-card.component';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\nimport { SlideshowComponent } from './components/slideshow/slideshow.component';\r\nimport { MoviesGridComponent } from './components/movies-grid/movies-grid.component';\r\nimport { PosterPipe } from './pipes/poster.pipe';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { CastSlideshowComponent } from './components/cast-slideshow/cast-slideshow.component';\r\nimport { OscaloComponent } from './components/oscalo/oscalo.component';\r\nimport { PadletComponent } from './components/padlet/padlet.component';\r\nimport { FooterComponent } from './components/shared/footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    ListsComponent,\r\n    ListComponent,\r\n    SearchComponent,\r\n    OscaloComponent,\r\n    ListCardComponent,\r\n    CalendarComponent,\r\n    SlideshowComponent,\r\n    MoviesGridComponent,\r\n    PosterPipe,\r\n    MovieComponent,\r\n    CastSlideshowComponent,\r\n    PadletComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    APP_ROUTING,\r\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    FlatpickrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    SwiperModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  exports: [\r\n    CalendarComponent\r\n  ],\r\n  providers: [\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ListsComponent } from './components/lists/lists.component';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { OscaloComponent } from './components/oscalo/oscalo.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { PadletComponent } from './components/padlet/padlet.component';\r\n\r\n\r\nconst ROUTES: Routes = [\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'about', component: AboutComponent },\r\n    { path: 'lists', component: ListsComponent },\r\n    { path: 'list/:listName', component: ListComponent },\r\n    { path: 'movie/:id', component: MovieComponent },\r\n    { path: 'search/:word', component: SearchComponent },\r\n    { path: 'calendar', component: CalendarComponent },\r\n    { path: 'oscalo', component: OscaloComponent },\r\n    { path: 'padlet', component: PadletComponent },\r\n    { path: '**', pathMatch: 'full', redirectTo: 'home' }\r\n    // { path: '**', component: PageNotFoundComponent, redirectTo: 'home' },\r\n];\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot(ROUTES, { useHash: true, relativeLinkResolution: 'legacy' });\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(ROUTES, { relativeLinkResolution: 'legacy' })],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FeatureRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html'\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<head>\r\n    <style>\r\n        .img-container {\r\n            text-align: center;\r\n        }\r\n        \r\n        video {\r\n            max-width: 100%;\r\n            height: auto;\r\n        }\r\n        \r\n        .jumbotron {\r\n            background-color: rgba(0, 0, 0, 0.247);\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<div class=\"jumbotron jumbotron-fluid animated fadeIn fast\">\r\n    <h1 class=\"ml-5\">Sobre MiralosMorWeb</h1>\r\n    <div class=\"container\">\r\n        <div class=\"img-container mt-5\">\r\n            <video width=\"854 \" height=\"480 \" controls>\r\n        <source src=\"./assets/video/intro.mp4 \" type=\"video/mp4 \">\r\n    </video>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, ChangeDetectionStrategy, ViewChild, TemplateRef, Inject, OnInit, LOCALE_ID, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { add, addYears, isSameDay, isSameMonth } from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CalendarView, CalendarEventTitleFormatter} from 'angular-calendar';\r\nimport { CustomEventTitleFormatter } from './custom-event-title-formatter.provider';\r\nimport { DatePipe, DOCUMENT, registerLocaleData } from '@angular/common';\r\nimport localeEsAr from '@angular/common/locales/es-AR';\r\nimport { FormGroup, FormBuilder, NgForm, Validators } from '@angular/forms';\r\nimport { EventsService } from '../../services/events.service';\r\nimport Swal from 'sweetalert2';\r\nimport { CalendarEvent, CalendarEventAction} from '../../shared/interfaces';\r\n\r\nregisterLocaleData(localeEsAr, 'es-Ar');\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#dc143c',\r\n    secondary: '#FAE3E3',\r\n  },\r\n  blue: {\r\n    primary: '#0000ff',\r\n    secondary: '#D1E8FF',\r\n  },\r\n  yellow: {\r\n    primary: '#ffff00',\r\n    secondary: '#FDF1BA',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: CalendarEventTitleFormatter,\r\n      useClass: CustomEventTitleFormatter,\r\n    },\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class CalendarComponent implements OnInit, OnDestroy {\r\n\r\n  private readonly darkThemeClass = 'dark-theme';\r\n\r\n  @ViewChild('modalContentEdit', { static: true }) modalContentEdit: TemplateRef<any>;\r\n  @ViewChild('modalContentAdd', { static: true }) modalContentAdd: TemplateRef<any>;\r\n  @ViewChild('modalDelete', { static: true }) modalDelete: TemplateRef<any>;\r\n\r\n  events: CalendarEvent[] = [];\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  modalData: CalendarEvent;\r\n\r\n  addForm: FormGroup;\r\n\r\n  editForm: FormGroup;\r\n\r\n  currentDay: Date;\r\n\r\n  classFlag: string;\r\n\r\n  classes = ['Discord', 'Otros', 'Lo Cumpleañito'];\r\n\r\n  pipe = new DatePipe('es-Ar');\r\n\r\n  actions: CalendarEventAction[] = [\r\n    {\r\n      label: '<i class=\"fas fa-pencil-alt\"></i>',\r\n      a11yLabel: 'Edit',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Edited', event);\r\n      },\r\n    },\r\n    {\r\n      label: '<i class=\"fas fa-fw fa-trash-alt\"></i>',\r\n      a11yLabel: 'Delete',\r\n      onClick: ({ event }: { event: CalendarEvent }): void => {\r\n        this.handleEvent('Deleted', event);\r\n      },\r\n    },\r\n  ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  activeDayIsOpen: boolean = true;\r\n\r\n  constructor( private _eventsService: EventsService,\r\n               private modal: NgbModal,\r\n               @Inject(DOCUMENT) private document,\r\n               private formBuilder: FormBuilder ) {\r\n                }\r\n\r\n  ngOnInit(): void {\r\n    this.document.body.classList.add(this.darkThemeClass);\r\n    this.getEvents();\r\n    }\r\n\r\n  ngOnDestroy(): void {\r\n    this.document.body.classList.remove(this.darkThemeClass);\r\n  }\r\n\r\n  get titleNotValidAddForm() {\r\n    return this.addForm.get('title').invalid && this.addForm.get('title').touched;\r\n  }\r\n  get dateNotValidAddForm() {\r\n    return this.addForm.get('start').invalid && this.addForm.get('start').touched;\r\n  }\r\n\r\n  get titleNotValidEditForm() {\r\n    return this.editForm.get('title').invalid && this.editForm.get('title').touched;\r\n  }\r\n  get dateNotValidEditForm() {\r\n    return this.editForm.get('start').invalid && this.editForm.get('start').touched;\r\n  }\r\n\r\n  get citeClassAddForm() {\r\n    return this.addForm.get('citeClass').invalid && this.addForm.get('citeClass').touched;\r\n  }\r\n\r\n  get citeClassEditForm() {\r\n    return this.editForm.get('citeClass').invalid && this.editForm.get('citeClass').touched;\r\n  }\r\n\r\n  getEvents(){\r\n    this._eventsService.getEvents()\r\n      .subscribe( resp => {\r\n        this.events = resp;\r\n        this.events.forEach(event => {\r\n          event.actions = this.actions;\r\n        });\r\n        this.refresh.next();\r\n        });\r\n  }\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\r\n    this.currentDay = date;\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    this.modalData = event;\r\n    switch (action) {\r\n      case 'Clicked':\r\n        const date = this.pipe.transform(event.start, 'short');\r\n        Swal.fire({\r\n          title: event.title,\r\n          html: '<b>' + event.citeClass + '</b>' + '<br>' + date + '<br><br>' + event.description,\r\n          showDenyButton: true,\r\n          showCancelButton: true,\r\n          confirmButtonText: `Editar`,\r\n          denyButtonText: `Borrar`,\r\n          cancelButtonText: `Cancelar`\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.handleEvent('Edited', event);\r\n          } else if (result.isDenied) {\r\n            this.handleEvent('Deleted', event);\r\n          }\r\n        });\r\n        break;\r\n      case 'Edited':\r\n        this.createEditForm(this.modalData)\r\n        this.modal.open(this.modalContentEdit, { size: 'lg', windowClass: 'dark-modal', centered: true  });\r\n        break;\r\n      case 'Deleted':\r\n        Swal.fire({\r\n          icon: 'warning',\r\n          text: `Estás seguro que querés borrar el evento ${ event.title }?`,\r\n          showConfirmButton: true,\r\n          showCancelButton: true\r\n        }).then( resp => {\r\n          if (resp.value) {\r\n            this._eventsService.deleteEvent( Number(event.id) ).subscribe();\r\n            for (let index = 0; index < this.events.length; index++) {\r\n              if (event.id === this.events[index].id) {\r\n                this.events.splice(index, 1);\r\n                break;\r\n              }\r\n            }\r\n            this.refresh.next();\r\n          }\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  createEditForm(modalData: CalendarEvent){\r\n    this.editForm = this.formBuilder.group({\r\n      title: [modalData.title, [ Validators.required, Validators.minLength(5) ] ],\r\n      start: [ modalData.start, Validators.required],\r\n      description: [modalData.description],\r\n      citeClass: [ modalData.citeClass, Validators.required ],\r\n      id: [modalData.id]\r\n    });\r\n  }\r\n\r\n  public saveEditedEvent() {\r\n    const eventIndex = this.events.findIndex((obj => obj.id === this.editForm.value.id));\r\n    if (this.events[eventIndex].start !== this.editForm.value.start ||\r\n        this.events[eventIndex].title !== this.editForm.value.title ||\r\n        this.events[eventIndex].description !== this.editForm.value.description ||\r\n        this.events[eventIndex].citeClass !== this.editForm.value.citeClass\r\n        ) {\r\n          this.editForm.value.end = this.editForm.value.start;\r\n          const eventForEdit: CalendarEvent = this.editForm.value;\r\n          this._eventsService.editEvent(this.editForm.value.id, this.editForm.value)\r\n            .subscribe();\r\n          this.modal.dismissAll();\r\n          eventForEdit.actions = this.actions;\r\n          switch (eventForEdit.citeClass){\r\n            case 'Discord':\r\n                eventForEdit.color = colors.blue;\r\n                break;\r\n            case 'Otros':\r\n                eventForEdit.color = colors.red;\r\n                break;\r\n            case 'Lo Cumpleañito':\r\n                eventForEdit.color = colors.yellow;\r\n                break;\r\n        }\r\n          this.events[eventIndex] = eventForEdit;\r\n          this.refresh.next();\r\n    } else {\r\n      this.modal.dismissAll();\r\n    }\r\n  }\r\n\r\n  addEvent( ): void {\r\n    this.createAddForm();\r\n    this.modal.open(this.modalContentAdd, { size: 'lg', windowClass: 'dark-modal', centered: true });\r\n  }\r\n\r\n  createAddForm(){\r\n    this.addForm = this.formBuilder.group({\r\n      title: ['', [ Validators.required, Validators.minLength(5) ] ],\r\n      start: [ this.currentDay, Validators.required ],\r\n      description: [''],\r\n      citeClass: ['', Validators.required ]\r\n    });\r\n  }\r\n\r\n  changeClassAdd(c){\r\n    this.addForm.setValue(c.target.value, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n  changeClassEdit(c){\r\n    this.editForm.setValue(c.target.value, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n  saveNewEvent() {\r\n    if (this.addForm.value.citeClass === 'Lo Cumpleañito') {\r\n      const yearForCompare = new Date('2025');\r\n      for (let startDate = this.addForm.value.start; startDate < yearForCompare ; startDate = addYears(startDate, 1) ) {\r\n        this.addForm.value.start = startDate;\r\n        this.addForm.value.end = startDate;\r\n        const eventForAdd: CalendarEvent = this.addForm.value;\r\n        this._eventsService.postEvent( this.addForm.value )\r\n          .subscribe( resp => {\r\n            eventForAdd.id = resp.id;\r\n          }) ;\r\n        this.modal.dismissAll();\r\n        eventForAdd.actions = this.actions;\r\n        switch (eventForAdd.citeClass){\r\n          case 'Discord':\r\n              eventForAdd.color = colors.blue;\r\n              break;\r\n          case 'Otros':\r\n              eventForAdd.color = colors.red;\r\n              break;\r\n          case 'Lo Cumpleañito':\r\n              eventForAdd.color = colors.yellow;\r\n              break;\r\n        }\r\n        this.events.push(eventForAdd);\r\n      }\r\n    } else {\r\n      this.addForm.value.end = this.addForm.value.start;\r\n      const eventForAdd: CalendarEvent = this.addForm.value;\r\n      this._eventsService.postEvent( this.addForm.value )\r\n        .subscribe( resp => {\r\n          eventForAdd.id = resp.id;\r\n        }) ;\r\n      this.modal.dismissAll();\r\n      eventForAdd.actions = this.actions;\r\n      switch (eventForAdd.citeClass){\r\n        case 'Discord':\r\n            eventForAdd.color = colors.blue;\r\n            break;\r\n        case 'Otros':\r\n            eventForAdd.color = colors.red;\r\n            break;\r\n        case 'Lo Cumpleañito':\r\n            eventForAdd.color = colors.yellow;\r\n            break;\r\n      }\r\n      this.events.push(eventForAdd);\r\n    }\r\n    this.refresh.next();\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n\r\n}\r\n","<div class=\"row text-center mt-5\">\r\n    <div class=\"col-md-4\">\r\n        <div class=\"btn-group\">\r\n            <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Anterior\r\n            </div>\r\n            <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n                Hoy\r\n            </div>\r\n            <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Siguiente\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n        <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n        <button class=\"btn btn-primary float-right\" (click)=\"addEvent()\">\r\n            Agregar Nuevo\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n<br />\r\n\r\n<div class=\"animated fadeIn\">\r\n    <mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" [cellTemplate]=\"customCellTemplate\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\" (eventClicked)=\"handleEvent('Clicked', $event.event)\">\r\n    </mwl-calendar-month-view>\r\n</div>\r\n\r\n\r\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\r\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\r\n    </div>\r\n    <div class=\"cal-cell-row\">\r\n        <div *ngFor=\"let event of day.events\">\r\n            <i *ngIf=\"event.citeClass === 'Discord' \" class=\"fab fa-discord ml-2\" style=\"color: blue;\"></i>\r\n            <i *ngIf=\"event.citeClass === 'Otros' \" class=\"fas fa-calendar ml-2\" style=\"color: crimson;\"></i>\r\n            <i *ngIf=\"event.citeClass === 'Lo Cumpleañito' \" class=\"fas fa-birthday-cake ml-2\" style=\"color: orange;\"></i>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<br /><br /><br />\r\n\r\n\r\n<ng-template #modalContentAdd let-close=\"close\" class=\"animated fadeIn\">\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Agregar Evento</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form (ngSubmit)=\"saveNewEvent(addForm)\" [formGroup]=\"addForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"container\">\r\n                <div class=\"form-group\">\r\n                    <label>Nombre del Evento:</label>\r\n                    <input type=\"text\" name=\"title\" class=\"form-control\" formControlName=\"title\" [class.is-invalid]=\"titleNotValidAddForm\">\r\n                    <small *ngIf=\"titleNotValidAddForm\" class=\"text-danger\">\r\n                        Ingrese al menos 5 caracteres\r\n                    </small>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"form-group col\">\r\n                        <label>Inicio del Evento:</label>\r\n                        <input type=\"text\" name=\"start\" mwlFlatpickr class=\"form-control\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\" dateFormat=\"Y-m-dTH:i\" time24hs=\"true\" altFormat=\"F j, Y H:i\" formControlName=\"start\" [class.is-invalid]=\"dateNotValidAddForm\">\r\n                        <small *ngIf=\"dateNotValidAddForm\" class=\"text-danger\">\r\n                        Ingrese fecha y hora del evento \r\n                    </small>\r\n                    </div>\r\n                    <div class=\"form-group col\">\r\n                        <label>Tipo de Evento:</label>\r\n\r\n                        <select class=\"custom-select\" (change)=\"changeClassAdd($event)\" formControlName=\"citeClass\" [class.is-invalid]=\"citeClassAddForm\">\r\n                                <option *ngFor=\"let citeClass of classes\" [ngValue]=\"citeClass\">{{ citeClass }}</option>\r\n                             </select>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label>Descripción:</label>\r\n                    <input type=\"text\" name=\"description\" class=\"form-control\" formControlName=\"description\">\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!addForm.valid\" (ngModelChange)=\"refresh.next()\">\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n<ng-template #modalContentEdit let-close=\"close\" class=\"animated fadeIn\">\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Editar Evento</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form (ngSubmit)=\"saveEditedEvent(editForm)\" [formGroup]=\"editForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"container\">\r\n                <div class=\"form-group\">\r\n                    <label>Nombre del Evento:</label>\r\n                    <input type=\"text\" name=\"title\" class=\"form-control\" formControlName=\"title\" [class.is-invalid]=\"titleNotValidEditForm\">\r\n                    <small *ngIf=\"titleNotValidEditForm\" class=\"text-danger\">\r\n                        Ingrese al menos 5 caracteres\r\n                    </small>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"form-group col\">\r\n                        <label>Inicio del Evento:</label>\r\n                        <input type=\"text\" name=\"start\" mwlFlatpickr class=\"form-control\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\" dateFormat=\"Y-m-dTH:i\" time24hs=\"true\" altFormat=\"F j, Y H:i\" formControlName=\"start\" [class.is-invalid]=\"dateNotValidEditForm\">\r\n                        <small *ngIf=\"dateNotValidEditForm\" class=\"text-danger\">\r\n                        Ingrese fecha y hora del evento \r\n                    </small>\r\n                    </div>\r\n                    <div class=\"form-group col\">\r\n                        <label>Tipo de Evento:</label>\r\n\r\n                        <select class=\"custom-select\" (change)=\"changeClassEdit($event)\" formControlName=\"citeClass\" [class.is-invalid]=\"citeClassEditForm\">\r\n                                <option *ngFor=\"let citeClass of classes\" [ngValue]=\"citeClass\">{{ citeClass }}</option>\r\n                             </select>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descripción:</label>\r\n                    <input type=\"text\" name=\"description\" class=\"form-control\" formControlName=\"description\">\r\n                </div>\r\n\r\n                <!-- <div class=\"form-group\">\r\n                    <br>\r\n                    <button *ngIf=\"discordFlag\" (click)=\"discordFlag = false\" formControlName=\"discord\" class=\"btn btn-outline-primary w-50\" type=\"button\" ngDefaultControl>Discord\r\n                        <i class=\"fab fa-discord\"></i>\r\n                    </button>\r\n\r\n                    <button *ngIf=\"!discordFlag\" (click)=\"discordFlag = true\" formControlName=\"discord\" class=\"btn btn-outline-secondary w-50\" type=\"button\" ngDefaultControl>Otros\r\n                        <i class=\"fas fa-calendar-alt\"></i>\r\n                    </button>\r\n                </div> -->\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.valid\" (ngModelChange)=\"refresh.next()\">\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</ng-template>","import { LOCALE_ID, Inject, Injectable } from '@angular/core';\r\nimport { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n  constructor(@Inject(LOCALE_ID) private locale: string) {\r\n    super();\r\n  }\r\n\r\n  // you can override any of the methods defined in the parent class\r\n\r\n  month(event: CalendarEvent): string {\r\n    return `<b>${new DatePipe(this.locale).transform(\r\n      event.start,\r\n      'HH:mm',\r\n      this.locale\r\n    )}</b> ${event.title}`;\r\n  }\r\n\r\n  week(event: CalendarEvent): string {\r\n    return `<b>${new DatePipe(this.locale).transform(\r\n      event.start,\r\n      'HH:mm',\r\n      this.locale\r\n    )}</b> ${event.title}`;\r\n  }\r\n\r\n  day(event: CalendarEvent): string {\r\n    return `<b>${new DatePipe(this.locale).transform(\r\n      event.start,\r\n      'HH:mm',\r\n      this.locale\r\n    )}</b> ${event.title}`;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Cast } from 'src/app/shared/interfaces';\r\nimport Swiper from 'swiper';\r\n\r\n@Component({\r\n  selector: 'app-cast-slideshow',\r\n  templateUrl: './cast-slideshow.component.html',\r\n  styleUrls: ['./cast-slideshow.component.css']\r\n})\r\nexport class CastSlideshowComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() cast: Cast[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    const swiper = new Swiper('.swiper-container', {\r\n      slidesPerView: 5.3,\r\n      freeMode: true,\r\n      spaceBetween: 15\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"swiper-container\">\r\n    <div class=\"swiper-wrapper\">\r\n        <div *ngFor=\"let actor of cast\" class=\"swiper-slide text-center text-white\">\r\n\r\n            <img [src]=\"actor.profile_path | poster\" class=\"img-thumbnail\" [alt]=\"actor.name\">\r\n            <small>{{actor.name}}</small>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ListsService } from '../../services/lists.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListModel } from 'src/app/shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public lists: ListModel[] = [];\r\n\r\n  events = [\r\n    {title: 'titulo 1'},\r\n    {title: 'titulo 2'},\r\n    {title: 'titulo 3'},\r\n  ];\r\n\r\n  constructor(\r\n    private _listsService: ListsService,\r\n    private spinner: NgxSpinnerService\r\n    ) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.spinner.show();\r\n    this._listsService.getLists()\r\n      .subscribe( (resp) => {\r\n        this.lists = resp;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n}\r\n\r\n","<ngx-spinner\r\n  bdColor=\"rgba(78,78,80,0.8)\"\r\n  size=\"large\"\r\n  color=\"#C3073F\"\r\n  type=\"ball-clip-rotate-pulse\"\r\n>\r\n</ngx-spinner>\r\n<br><br>\r\n<div *ngIf=\"lists.length > 0\">\r\n    <app-slideshow [lists]=\"lists\"></app-slideshow>\r\n</div>\r\n\r\n<br><br>\r\n\r\n<div class=\"container\" style=\"background-color: rgba(78, 78, 80, 0.247);\">\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <i class=\"fa fa-calendar fa-5x\" style=\"color: #6F2232; padding-left: 3rem; vertical-align: middle; padding-top: 2rem; padding-bottom: 2rem;\" aria-hidden=\"true\"></i>\r\n    </div>\r\n      <div class=\"col-8\">\r\n          <div class=\"row\">\r\n            <h2>Próximos eventos</h2>\r\n          </div>\r\n          <div class=\"row\" *ngFor=\"let event of events\">\r\n            <p><i class=\"fa fa-circle fa-1x\"></i>  {{ event.title }}</p>\r\n          </div>          \r\n      </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ListModel } from 'src/app/shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-list-card',\r\n  templateUrl: './list-card.component.html'\r\n})\r\nexport class ListCardComponent implements OnInit {\r\n\r\n  @Input() list: ListModel;\r\n  @Input() index: number;\r\n\r\n  @Output() selectedList: EventEmitter<number>;\r\n\r\n  constructor(private router: Router) {\r\n    this.selectedList = new EventEmitter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  showList(listName: string){\r\n    this.router.navigate(['/list', listName]);\r\n    // this.selectedList.emit(this.index);\r\n  }\r\n\r\n}\r\n","<div class=\"card animated fadeIn fast bg-dark mb-3\" style=\"max-width: 25rem;\">\r\n    <img [src]=\"list.img\" class=\"card-img-top\" [alt]=\" list.name \">\r\n    <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ list.name }}</h5>\r\n        <p class=\"card-text\">{{ list.description }}</p>\r\n        <p class=\"card-text\"><small class=\"text-white-50 \">Solicitada por: {{ list.by }}</small></p>\r\n        <button (click)=\"showList( list.name )\" type=\"button\" class=\"btn btn-outline-primary btn-block\">\r\n            Ver lista\r\n        </button>\r\n    </div>\r\n</div>","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ListsService } from '../../services/lists.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListModel, Movies } from 'src/app/shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html'\r\n})\r\nexport class ListComponent implements OnInit{\r\n\r\n  public list: ListModel = new ListModel();\r\n  listName: string;\r\n  movies: Movies[];\r\n  imdbID: number;\r\n  isLoading = true;\r\n\r\n  moviesForm: FormGroup;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private _listsService: ListsService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private spinner: NgxSpinnerService\r\n              ) {\r\n    // this.activatedRoute.params.subscribe( resp => {\r\n    //   this.list = this._listsService.getList(resp['name']);\r\n    // });\r\n   }\r\n\r\n   ngOnInit(){\r\n     this.spinner.show();\r\n     const listName = this.activatedRoute.snapshot.paramMap.get('listName');\r\n     this._listsService.getList(listName).subscribe((resp) => {\r\n       this.list = resp;\r\n       this.listName = listName;\r\n       this.movies = resp.movies;\r\n       this.spinner.hide();\r\n       this.isLoading = false;\r\n\r\n      });\r\n   }\r\n\r\n  createMoviesForm(){\r\n    this.moviesForm = this.formBuilder.group({\r\n      movies: this.formBuilder.group([])\r\n    });\r\n  }\r\n\r\n  randomFilm(movies: Movies[]){\r\n    const randomMovie = movies[Math.floor(Math.random() * movies.length)];\r\n    this._listsService.getMovie(randomMovie.imdb_id).subscribe( resp => {\r\n      this.imdbID = resp.movie_results[0].id;\r\n      this.router.navigate(['/movie', this.imdbID]);\r\n\r\n        });\r\n   }\r\n\r\n\r\n\r\n}\r\n","<head>\r\n    <style>\r\n        .img-container {\r\n            text-align: center;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<ngx-spinner\r\n  bdColor=\"rgba(78,78,80,0.8)\"\r\n    template=\"<img src='./assets/img/wengweng.gif' />\">\r\n</ngx-spinner>\r\n\r\n<div *ngIf=\"!isLoading\">\r\n\r\n    <div class=\"row\">\r\n        <h1 class=\"col animated fadeIn mt-3\"> {{ list.name }}</h1>\r\n        <div class=\"col text-right animated fadeIn mt-4\">\r\n            <a href=\"{{ list.link }}\">\r\n                <img alt=\"letterboxd.jpg\" src=\"./assets/img/letterboxd.jpg\" width=\"200\" height=auto>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <small>Solicitada por: {{list.by}}</small>\r\n\r\n    <hr>\r\n\r\n\r\n    <div class=\"animated fadeIn fast\">\r\n        <div class=\"img-container\">\r\n            <img [src]=\"list.img\" class=\"img-fluid center rounded\" [alt]=\" list.name \" width=\"1000\" height=auto>\r\n        </div>\r\n\r\n        <br><br>\r\n\r\n        <h3>\r\n            <i>\r\n            {{ list.description }}\r\n        </i>\r\n        </h3>\r\n\r\n        <div class=\"row mt-3\">\r\n            <div class=\"col text-left\">\r\n                <button (click)=\"randomFilm(list.movies)\" type=\"button\" class=\"btn btn-outline-primary\">Elegí por mi</button>\r\n            </div>\r\n            <div class=\"col text-right\">\r\n                <a [routerLink]=\"['/lists']\" href=\"lists\" class=\"btn btn-outline-danger\">Regresar</a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mt-2\" *ngIf=\"movies\">\r\n            <app-movies-grid [movies]=\"movies\"></app-movies-grid>\r\n        </div>\r\n\r\n        <!-- <table class=\"table table-dark mt-2\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Película</th>\r\n                <th scope=\"col\">Año</th>\r\n                <th scope=\"col\">Link</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let m of list.movies\">\r\n                <td> {{ m.name }} </td>\r\n                <td> {{ m.year }} </td>\r\n                <td>\r\n                    <a href=\"{{ m.link }}\">\r\n                        <img alt=\"letterboxd.jpg\" src=\"./assets/img/letterboxd.jpg\" width=\"100\" height=\"auto\">\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n\r\n\r\n    </table> -->\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ListsService } from '../../services/lists.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListModel } from 'src/app/shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['/lists.component.scss']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n\r\n  @ViewChild('modalAddList', { static: true }) modalContentAdd: TemplateRef<any>;\r\n\r\n  newListForm: FormGroup;\r\n\r\n  lists: ListModel[] = [];\r\n\r\n  get nameNotValidAddForm() {\r\n    return this.newListForm.get('name').invalid && this.newListForm.get('name').touched;\r\n  }\r\n  get descriptionNotValidAddForm() {\r\n    return this.newListForm.get('description').invalid && this.newListForm.get('description').touched;\r\n  }\r\n  get linkNotValidAddForm() {\r\n    return this.newListForm.get('link').invalid && this.newListForm.get('link').touched;\r\n  }\r\n  get byNotValidAddForm() {\r\n    return this.newListForm.get('by').invalid && this.newListForm.get('by').touched;\r\n  }\r\n  get wordsNotValidAddForm() {\r\n    return this.newListForm.get('words').invalid && this.newListForm.get('words').touched;\r\n  }\r\n  get imgNotValidAddForm() {\r\n    return this.newListForm.get('img').invalid && this.newListForm.get('img').touched;\r\n  }\r\n\r\n  constructor(private _listsService: ListsService,\r\n              private router: Router,\r\n              private modal: NgbModal,\r\n              private formBuilder: FormBuilder,\r\n              private spinner: NgxSpinnerService\r\n              ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this._listsService.getLists()\r\n      .subscribe( (resp) => {\r\n        this.lists = resp;\r\n        this.spinner.hide(); \r\n      });\r\n  }\r\n\r\n  showList(idx:number){\r\n    this.router.navigate(['/list', idx]);\r\n  }\r\n\r\n  newList(){\r\n    this.createListForm();\r\n    this.modal.open(this.modalContentAdd, { size: 'lg', windowClass: 'dark-modal', centered: true });\r\n  }\r\n\r\n  saveNewList(){\r\n    this._listsService.addList(this.newListForm.value).subscribe();\r\n    this.modal.dismissAll();\r\n    this.lists.push(this.newListForm.value);\r\n  }\r\n\r\n  createListForm(){\r\n    this.newListForm = this.formBuilder.group({\r\n      name: ['', [ Validators.required ] ],\r\n      description: ['', [ Validators.required ] ],\r\n      link: ['', [ Validators.required ] ],\r\n      img: ['', [ Validators.required ] ],\r\n      by: ['', [ Validators.required ] ],\r\n      words: ['', [ Validators.required ] ]\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner\r\n  bdColor=\"rgba(78,78,80,0.8)\"\r\n  size=\"large\"\r\n  color=\"#C3073F\"\r\n  type=\"ball-clip-rotate-pulse\"\r\n>\r\n</ngx-spinner>\r\n<h1 class=\"text-center mt-3\">Listas de Telegram Manija</h1>\r\n<hr>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col text-right\">\r\n        <button class=\"btn btn-primary float-right\" (click)=\"newList()\">\r\n        Agregar Nueva Lista\r\n    </button>\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n<div class=\"card-columns\">\r\n\r\n    <app-list-card (selectedList)=\"showList($event)\" [list]=\"list\" [index]=\"i\" *ngFor=\"let list of lists; let i = index\"></app-list-card>\r\n\r\n</div>\r\n\r\n<ng-template #modalAddList let-close=\"close\" class=\"animated fadeIn\">\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Agregar Lista</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form (ngSubmit)=\"saveNewList(newListForm)\" [formGroup]=\"newListForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"container\">\r\n                <div class=\"form-group\">\r\n                    <label>Nombre de la Lista:</label>\r\n                    <input type=\"text\" name=\"name\" class=\"form-control\" formControlName=\"name\" [class.is-invalid]=\"nameNotValidAddForm\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descripción:</label>\r\n                    <input type=\"text\" name=\"description\" class=\"form-control\" formControlName=\"description\" [class.is-invalid]=\"descriptionNotValidAddForm\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Ingrese link de la lista en Letterboxd:</label>\r\n                    <input type=\"text\" name=\"link\" class=\"form-control\" formControlName=\"link\" [class.is-invalid]=\"linkNotValidAddForm\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Ingrese url de una imagen relacionada:</label>\r\n                    <input type=\"text\" name=\"img\" class=\"form-control\" formControlName=\"img\" [class.is-invalid]=\"imgNotValidAddForm\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Quién solicitó la lista?</label>\r\n                    <input type=\"text\" name=\"by\" class=\"form-control\" formControlName=\"by\" [class.is-invalid]=\"byNotValidAddForm\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Ingrese palabras clave separadas con un espacio:</label>\r\n                    <input type=\"text\" name=\"words\" class=\"form-control\" formControlName=\"words\" [class.is-invalid]=\"wordsNotValidAddForm\">\r\n                </div>\r\n            </div>\r\n\r\n            <small *ngIf=\"nameNotValidAddForm || descriptionNotValidAddForm || linkNotValidAddForm || imgNotValidAddForm || byNotValidAddForm || wordsNotValidAddForm\" class=\"text-danger block\">\r\n                Complete todos los campos\r\n            </small>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!newListForm.valid\">\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ListsService } from '../../services/lists.service';\r\nimport { Location } from '@angular/common' ;\r\nimport { Cast, MovieDetail } from 'src/app/shared/interfaces';\r\n\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html'\r\n})\r\nexport class MovieComponent implements OnInit {\r\n\r\n  public movie: MovieDetail;\r\n  cast: Cast[] = [];\r\n  constructor( private activatedRoute: ActivatedRoute,\r\n               private _listsService: ListsService,\r\n               private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n    this._listsService.getMovieDetail( id ).subscribe( movie => {\r\n      this.movie = movie;\r\n    });\r\n    this._listsService.getCast( id ).subscribe( cast =>\r\n      this.cast = cast);\r\n  }\r\n\r\n  goBack(){\r\n    this.location.back();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3\" *ngIf=\"movie\">\r\n\r\n    <div class=\"col-md-6\">\r\n        <img [src]=\"movie.poster_path | poster\" [alt]=\"movie.original_title\" class=\"img-thumbnail\">\r\n    </div>\r\n\r\n    <div class=\"col-md-5\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-10\">\r\n                <h3> {{ movie.original_title}} ({{movie.release_date | date: 'yyyy' }}) </h3>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n                <a href=\"https://www.imdb.com/title/{{ movie.imdb_id }}\" target=\"_blank\" class=\"fab fa-imdb\"> </a>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-10\">\r\n                <h4> {{ movie.title}} </h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div class=\"row\">\r\n            <ul>\r\n                <li class=\"text-white\" *ngFor=\"let genre of movie.genres\">{{genre.name}}</li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col text-white\">{{ movie.overview }}</div>\r\n        </div>\r\n        <div class=\"row mt-5\" *ngIf=\"cast.length > 0\">\r\n            <div class=\"col\">\r\n                <app-cast-slideshow [cast]=\"cast\"></app-cast-slideshow>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"row mt-3\">\r\n    <div class=\"col text-right\">\r\n        <button class=\"btn btn-outline-danger\" (click)=\"goBack()\">\r\n            Regresar\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ListsService } from '../../services/lists.service';\r\nimport { ListModel, Movies, MovieResult} from '../../shared/interfaces';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movies-grid',\r\n  templateUrl: './movies-grid.component.html',\r\n  styleUrls: ['./movies-grid.component.scss']\r\n})\r\nexport class MoviesGridComponent implements OnInit {\r\n\r\n  imdbMovies: MovieResult[] = [];\r\n\r\n  @Input() movies: Movies[];\r\n\r\n  constructor( private _listsService: ListsService,\r\n               private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.movies.forEach( movie => {\r\n      this._listsService.getMovie(movie.imdb_id).subscribe( resp => {\r\n        this.imdbMovies.push(resp.movie_results[0]);\r\n        });\r\n    });\r\n  }\r\n\r\n  onMovieClick( movie: MovieResult){\r\n  this.router.navigate(['/movie', movie.id]);\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3 mb-5\" *ngFor=\"let movie of imdbMovies\">\r\n\r\n\r\n        <img [src]=\"movie.poster_path | poster\" class=\"img-fluid poster\" (click)=\"onMovieClick( movie )\">\r\n\r\n        <h3 class=\"ml-2\"> {{ movie.original_title }}</h3>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-oscalo',\r\n  templateUrl: './oscalo.component.html'\r\n})\r\nexport class OscaloComponent implements OnInit {\r\n\r\n  notClicked = true;\r\n  result: 'winner' | 'loser' | 'notFound';\r\n  loading = false;\r\n  showGif = false;\r\n  showMessageToGif = false;\r\n\r\n  losers = ['PePo', 'EvilIpa', 'Santi (del discord)', 'Martín Brest', 'Carlos Galan', 'noelyas', 'Juan Andrés Navarro', 'Yani', 'Edgardo Reglin', 'Giselle', \r\n    '@jmcartelle', 'Martin Alzueta', 'Sebastian (con camara)', '@princesscarolyn78', 'Maxi', 'Fede C', 'Fernando Stefanelli', 'Carla', 'dunno555', 'Gary Busy', \r\n    'Nico LP', 'Magali Collante', 'Sebastian (con barba)', 'Ale', 'Marcela M', 'Agusli', 'Lavtaro', '@hitoshidiaz', 'Lailu', '@Anitabasto', 'Hernán Rodriguez' ,\r\n    'Mauro El Picaro', 'Lisandro Ozafrain', 'Camilo C', 'Mark II', 'Juanno', 'El_Diegot3', 'Juan', 'Daniel Rodriguez', 'CALO', 'Nico Annia', 'Gus', '@70ldo',\r\n    'Marcelo Martínez', 'Albano Spagnoletti', 'Gon Sarno', 'Guille', 'Pablo', 'Eugenin', 'Guille Giova', '@catalanojoaquin', 'Santi', 'Claudio', \r\n    'Julianpaty95', 'Javier Covian', 'Matias Lepori', '@maragxzmxn', 'Nadia', 'Silvina', 'Mar', 'Carolina', 'Beorn The Bear', 'Joia Nunez'\r\n    ];\r\n\r\n  constructor(private router: Router,\r\n              @Inject(DOCUMENT) private document: Document\r\n              ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  searchName(text) {\r\n    console.log(text);\r\n    \r\n    this.notClicked = false;\r\n    this.loading = true;\r\n    setTimeout (() => {\r\n      this.result = 'notFound';\r\n      if (text.toLowerCase() === 'francisco requejo')\r\n      {\r\n        this.result = 'winner';\r\n      }\r\n      else {\r\n        for(let loser in this.losers) {\r\n          if (this.losers[loser].toLowerCase() === text.toLowerCase()) {\r\n            this.result = 'loser';\r\n            break;\r\n          }\r\n        };\r\n      }\r\n      this.loading = false;\r\n      if (this.result === 'loser') {\r\n        setTimeout(() => {\r\n          this.showMessageToGif = true;\r\n        }, 2500);\r\n        setTimeout(() => {\r\n          this.showMessageToGif = false;\r\n          this.showGif = true;\r\n        }, 5000);\r\n      }\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n}\r\n\r\n  clickedLink() {\r\n\r\n    this.notClicked = false;\r\n\r\n    setTimeout (() => {\r\n\r\n      document.location.href = 'https://forms.gle/Pg64dxLZyND23SJZA ';\r\n\r\n\r\n    }, 5000);\r\n\r\n    // https://forms.gle/Pg64dxLZyND23SJZA\r\n    \r\n  }\r\n\r\n}\r\n","<head>\r\n    <style>\r\n        .img-container {\r\n            text-align: center;\r\n        }        \r\n        .jumbotron {\r\n            background-color: rgba(0, 0, 0, 0.2);\r\n        }\r\n    </style>\r\n</head>\r\n<br>\r\n<div *ngIf=\"notClicked\">\r\n    <div class=\"text-center\">\r\n        <img src=\"./assets/img/oscalo.jpg\" style=\"width: 50%;\" alt=\"oscalo\" loading=\"lazy\">\r\n    </div>\r\n    <br>\r\n    <div class=\"jumbotron jumbotron-fluid animated fadeIn fast\">\r\n        <div class=\"container\">\r\n            <h1 class=\"display-4 text-center\">OSCALOS MÍRALOS MORIR 2021</h1>\r\n\r\n            <form class=\"form-inline my-2 my-lg-0 float-right\">\r\n                <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Ingresa tu nombre\" (keyup.enter)=\"searchName(searchText.value)\" #searchText>\r\n                <button (click)=\"searchName(searchText.value)\" class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Buscar</button>\r\n            </form>\r\n\r\n            <!-- <h2 class=\"text-center\">BASES Y CONDICIONES</h2>\r\n            <p>Se vienen los Oscars y este antro del amor y la manija no va a dejar pasar de largo la oportunidad de hacer una timba con eso. \r\n                No se hagan ilusiones: esto es por el honor (al menos por ahora). He aquí con ustedes la lista de Nominados a los premios este año \r\n                y las condiciones para participar: \r\n            </p>\r\n    \r\n            <ul>\r\n                <li>\r\n                    Ser miembre de este grupo MMVip.\r\n                </li>\r\n                <li>\r\n                    Identificarse en el formulario SOLO con el nombre de usuario utilizado en este grupo.\r\n                </li>\r\n                <li>\r\n                    Completar el formulario una única vez. En caso de encontrar dos formularios del mismo usuario, se considerará solo el primero ingresado.\r\n                </li>\r\n                <li>\r\n                    El formulario se cierra a las 18 hs del domingo 26/4, tenemos tiempo para meditar con la almohada o la botella hasta ese momento.\r\n                </li>\r\n                <li>\r\n                    <b>\r\n                        IMPORTANTE no compartir el formulario fuera de este espacio, registramos todas sus IPs y les rompemos todo!\r\n                    </b>\r\n                </li>\r\n            </ul>\r\n            <h3>Esperamos que disfruten de la carnicería...digo, de la competencia. <i>There will be blood.</i></h3>\r\n            <button (click)=\"clickedLink()\" class=\"btn btn-primary float-right\">QUIERO JUGAR!</button> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"text-center\" *ngIf=\"!notClicked && loading\">\r\n    <div class=\"spinner-border text-primary \">\r\n    </div>\r\n    <h3>Estamos procesando la información, aguarde un momento por favor.</h3>\r\n    <p class=\"text-right\"><small style=\"color: lightgray;\">Si, tenemos unos enanos con ábacos trabajando non-stop</small></p>\r\n</div>\r\n \r\n<div class=\"text-center\" *ngIf=\"!notClicked && !loading && result === 'notFound'\">\r\n    <h3>Sabés escribir? Así no se puede viejo...</h3> \r\n    <h3>O no participaste o no pusiste tu nombre tal como en la planilla.</h3> \r\n    <button (click)=\"refresh()\" class=\"btn btn-primary float-right\">REINTENTAR</button>\r\n</div>\r\n\r\n<div class=\"text-center\" *ngIf=\"!notClicked && !loading && result === 'loser'\">\r\n    <iframe src=\"https://giphy.com/embed/dkuZHIQsslFfy\" width=\"480\" height=\"384\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\r\n\r\n</div>\r\n\r\n<div class=\"text-center\" *ngIf=\"!showGif && showMessageToGif\"> \r\n    <h3>Te pensaste que no lo iba a poner??</h3>\r\n</div>\r\n\r\n<div class=\"text-center\" *ngIf=\"showGif && !showMessageToGif\"> \r\n    <img src=\"./assets/img/gifDeAnton.gif\" alt=\"gifDeAnton.gif\">\r\n</div>\r\n\r\n<div class=\"text-center\" *ngIf=\"!notClicked && !loading && result === 'winner'\">\r\n    <img src=\"./assets/img/senorasBailando.gif\" alt=\"senorasBailando.gif\">\r\n    <h3>Felicitaciones Fran!!</h3>\r\n    <h3>Sale clande MM con picadita para degustar ese quesito...</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-padlet',\r\n  templateUrl: './padlet.component.html'\r\n})\r\nexport class PadletComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"padlet-embed\" style=\"border:1px solid rgba(0,0,0,0.1);border-radius:2px;box-sizing:border-box;overflow:hidden;position:relative;width:100%;background:#F4F4F4\">\r\n    <p style=\"padding:0;margin:0\">\r\n        <iframe src=\"https://padlet.com/embed/zczciks3tdh7hwym\" frameborder=\"0\" allow=\"camera;microphone;geolocation\" style=\"width:100%;height: 750px;display:block;padding:0;margin:0\">\r\n        </iframe>\r\n    </p>\r\n    <div style=\"padding:8px;text-align:right;margin:0;\">\r\n        <a href=\"https://padlet.com?ref=embed\" style=\"padding:0;margin:0;border:none;display:block;line-height:1;height:16px\" target=\"_blank\">\r\n            <img src=\"https://padlet.net/embeds/made_with_padlet.png\" width=\"86\" height=\"16\" style=\"padding:0;margin:0;background:none;border:none;display:inline;box-shadow:none\" alt=\"Hecho con Padlet\">\r\n        </a>\r\n    </div>\r\n</div>\r\n<br>\r\n<div class=\"text-right\">\r\n    <h4>Gracias @noelyas</h4>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ListModel } from 'src/app/shared/interfaces';\r\nimport { ListsService } from '../../services/lists.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  searchedLists: ListModel[] = [];\r\n  word: string;\r\n  isLoading = false;\r\n  unacceptedWords = ['marvel', 'capitan america', 'ironman', 'spiderman', 'superman', 'dc', 'green lantern', 'thanos', 'hulk',\r\n                      'superheroe', 'suar', 'carnevale'];\r\n  faretta = 'faretta';\r\n  isFaretta = false;\r\n  unaccepted = false;\r\n\r\n  constructor( private activatedRoute: ActivatedRoute,\r\n               private _listsService: ListsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    // desde la activated route traigo el string que se ingresó en el buscador\r\n    const word = this.activatedRoute.snapshot.paramMap.get('word');\r\n    // Con un subscribe al servicio recupero el arreglo de listas con alguna coincidencia en los tags\r\n    this._listsService.searchList(word).subscribe((resp: ListModel[]) => {\r\n      this.isLoading = false;\r\n      this.searchedLists = resp;\r\n      this.word = word;\r\n    });\r\n    if (this.faretta === word.toLowerCase()){\r\n      this.isFaretta = true;\r\n    }\r\n    this.unacceptedWords.forEach(unacceptedWord => {\r\n      if (unacceptedWord === word.toLowerCase()) {\r\n        this.unaccepted = true;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h1><small>Buscando: {{ word }}</small></h1>\r\n<hr>\r\n\r\n<div *ngIf=\"isFaretta && !isLoading && searchedLists.length === 0 && !unaccepted\">\r\n    <div class=\"img-container mt-3 text-center\">\r\n        <img src=\"./assets/img/escalera.gif\" alt=\"popcorn.gif\">\r\n        <br>\r\n        <img src=\"./assets/img/black.png\" alt=\"black.png\">\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!isLoading && unaccepted\">\r\n    <div class=\"img-container mt-3 text-center\">\r\n        <video width=\"854 \" height=\"480 \" autoplay>\r\n            <source src=\"./assets/video/homealone.mp4 \" type=\"video/mp4 \">\r\n        </video>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"isLoading\">\r\n    <img src=\"./assets/img/popcorn.gif\" alt=\"popcorn.gif\">\r\n</div>\r\n\r\n<div *ngIf=\"!isLoading && searchedLists.length > 0\">\r\n    <div class=\"card-columns animated fadeIn faster\">\r\n\r\n        <app-list-card [list]=\"list\" [index]=\"i\" *ngFor=\"let list of searchedLists; let i = index\"></app-list-card>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"alert alert-warning text-center mt-3 animated fadeIn faster\" *ngIf=\"!isFaretta && !isLoading && searchedLists.length === 0 && !unaccepted\">\r\n    <h4 class=\"alert-heading\">No existen resultados con el término: {{word}}</h4>\r\n    <p>\r\n        <i class=\"fa fa-exclamation fa-2x\"></i>\r\n    </p>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  private audioDK = new Audio();\n  private isPlaying = false;\n\n  constructor() {\n    this.audioDK.src = './assets/audio/dk.mp3';\n  }\n\n  ngOnInit(): void {\n  }\n\n  playAudio(){\n    if (!this.isPlaying) {\n      this.audioDK.play();\n      this.isPlaying = true;\n    }\n    else {\n      this.audioDK.pause();\n      this.audioDK.currentTime = 0;\n      this.isPlaying = false;\n    }\n  }\n\n}\n","<footer class=\"page-footer text-right\">\n    <div class=\"container\">\n        <img width=\"50\" height=\"50\" src=\"./assets/img/tegobi.jpg\" (click)=\"this.playAudio()\" />\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor( private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  searchList( word:string ){\r\n    this.router.navigate(['/search', word]);\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark mmw_navbar bg-dark mmw-navbar-light\" id=\"mmw-navbar\">\r\n    <div class=\"container\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        <img class=\"brand-img\" src=\"./assets/img/logo-MM.png\" alt=\"\" loading=\"lazy\">\r\n    </a> \r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mmw-nav\" aria-controls=\"mmw-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"fa fa-bars\"></span> Menu\r\n    </button>\r\n    <form class=\"searchform order-lg-last\">\r\n        <div class=\"form-group d-flex\">\r\n            <input class=\"form-control pl-3\" placeholder=\"Buscar\" type=\"text\" placeholder=\"Buscar Lista\" (keyup.enter)=\"searchList(searchText.value)\" #searchText>\r\n            <button placeholder=\"\" (click)=\"searchList(searchText.value)\" class=\"form-control search\" type=\"submit\"><span class=\"fa fa-search\"></span></button>\r\n        </div>\r\n    </form>\r\n    <div class=\"collapse navbar-collapse\" id=\"mmw-nav\">\r\n        <ul  class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link active\" [routerLink]=\"['home']\">Home</a>\r\n            </li>\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['lists']\">Listas</a>\r\n            </li>\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['calendar']\">Calendario</a>\r\n            </li>\r\n            <!-- <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\" nav-link \" [routerLink]=\"['oscalo'] \">The Oscalos</a>\r\n            </li> -->\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['padlet']\">Padlet</a>\r\n            </li>\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['about']\">About</a>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n    \r\n    </div>\r\n</nav>","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport SwiperCore, { EffectFade, Swiper } from 'swiper/core';\r\nimport { Router } from '@angular/router';\r\nimport { ListModel } from 'src/app/shared/interfaces';\r\n\r\nSwiperCore.use([EffectFade]);\r\n\r\n@Component({\r\n  selector: 'app-slideshow',\r\n  templateUrl: './slideshow.component.html',\r\n  styleUrls: ['./slideshow.component.scss']\r\n})\r\nexport class SlideshowComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() lists: ListModel[];\r\n\r\n  public mySwiper: Swiper;\r\n\r\n  constructor( private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.mySwiper = new Swiper('.swiper-container', {\r\n    loop: true,\r\n    speed: 5000\r\n    });\r\n  }\r\n\r\n  onSlideNext() {\r\n    this.mySwiper.slideNext();\r\n  }\r\n\r\n  onSlidePrev() {\r\n    this.mySwiper.slidePrev();\r\n  }\r\n\r\n  showList(listName: string) {\r\n    this.router.navigate(['/list', listName]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"swiper-container\">\r\n    <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\" (click)=\"showList( list.name )\" *ngFor=\"let list of lists\" [ngStyle]=\"{\r\n                'background-size': 'cover',\r\n                'background-image': 'url('+list.img+')'}\">\r\n\r\n            <div class=\"list-description\">\r\n\r\n\r\n                <h3 (click)=\"showList(list.name)\">{{ list.name }}</h3>\r\n                <p>{{ list.description }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"swiper-pagination\"></div>\r\n\r\n    <div (click)=\"onSlidePrev()\" class=\"swiper-button-prev\"></div>\r\n    <div (click)=\"onSlideNext()\" class=\"swiper-button-next\"></div>\r\n\r\n    <div class=\"swiper-scrollbar\"></div>\r\n</div> -->\r\n\r\n<swiper>\r\n    <ng-template *ngFor=\"let list of lists\" swiperSlide>\r\n        <div class=\"swiper-slide\" (click)=\"showList( list.name )\" [ngStyle]=\"{\r\n            'background-size': 'cover',\r\n            'background-image': 'url('+list.img+')'}\">\r\n\r\n            <div class=\"list-description\">\r\n\r\n\r\n                <h3 (click)=\"showList(list.name)\">{{ list.name }}</h3>\r\n                <p>{{ list.description }}</p>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n\r\n</swiper>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'poster'\r\n})\r\nexport class PosterPipe implements PipeTransform {\r\n\r\n\r\n  // <img src=\"https://image.tmdb.org/t/p/w500/{{ movie.poster_path }}\" alt=\"\" class=\"img-fluid poster\">\r\n\r\n  transform( poster: string): string {\r\n    if (poster) {\r\n      return `https://image.tmdb.org/t/p/w500/${ poster }`;\r\n    } else {\r\n      return './assets/img/no-image.jpg';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { CalendarEvent } from '../shared/interfaces';\r\nimport { toDate, parseISO, isToday, startOfDay } from 'date-fns';\r\n\r\nconst colors: any = {\r\n    red: {\r\n      primary: '#dc143c',\r\n      secondary: '#FAE3E3',\r\n    },\r\n    blue: {\r\n      primary: '#0000ff',\r\n      secondary: '#D1E8FF',\r\n    },\r\n    yellow: {\r\n        primary: '#ffff00',\r\n        secondary: '#FDF1BA',\r\n    },\r\n  };\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EventsService {\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    private url = 'https://miralosmorserver.pythonanywhere.com/api/calendar/';\r\n\r\n    getEvents() {\r\n        return this.http.get(`${ this.url }all`)\r\n            .pipe(\r\n                map( this.createEventsArray )\r\n            );\r\n        }\r\n\r\n    postEvent( event: CalendarEvent) {\r\n        return this.http.post<any>(`${ this.url }newcite`, event);\r\n    }\r\n\r\n    createEventsArray( eventsObj: object) {\r\n    const events: CalendarEvent[] = [];\r\n    if (eventsObj === null) { return []; }\r\n    Object.keys( eventsObj ).forEach( key => {\r\n      const event: CalendarEvent = eventsObj[key];\r\n      event.start = new Date(event.start);\r\n      event.end = new Date(event.end);\r\n      switch (event.citeClass){\r\n          case 'Discord':\r\n              event.color = colors.blue;\r\n              break;\r\n          case 'Otros':\r\n              event.color = colors.red;\r\n              break;\r\n          case 'Lo Cumpleañito':\r\n              event.color = colors.yellow;\r\n              break;\r\n      }\r\n      event.actions = [];\r\n      events.push( event );\r\n    });\r\n    return events;\r\n   }\r\n\r\n   deleteEvent(id: number){\r\n       return this.http.delete( `${ this.url }calendar/delcite/${id}`);\r\n   }\r\n\r\n   editEvent(id: number, event: CalendarEvent){\r\n    return this.http.put( `${ this.url }calendar/delcite/${id}`, event);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ListsComponent } from '../components/lists/lists.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, delay } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Movie, MovieDetail, MovieCast, ListModel } from '../shared/interfaces'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ListsService {\r\n\r\n    constructor(private http: HttpClient){}\r\n    private url = 'https://miralosmorserver.pythonanywhere.com/api/';\r\n\r\n    // Recupero las listas solo de telegram\r\n    getLists(): Observable<ListModel[]> {\r\n      return this.http.get<ListModel[]>(`${ this.url }movielists-morvip`)\r\n        .pipe(\r\n          map( this.createArray )\r\n        );\r\n    }\r\n\r\n    // Creación del arreglo de listas recuperadas de la API\r\n    private createArray( listsObj: object){\r\n      const lists: ListModel[] = [];\r\n      if (listsObj === null) { return []; }\r\n      Object.keys( listsObj ).forEach( key => {\r\n        const list: ListModel = listsObj[key];\r\n        list.id = key;\r\n        lists.push( list );\r\n      });\r\n      return lists;\r\n    }\r\n\r\n    // Get a una lista específica por el nombre de la misma con guiones bajos en lugar de espacios\r\n    getList(listName: string): Observable<ListModel>{\r\n      listName = listName.replace(' ', '_');\r\n      // Recupero la Lista clickeada por nombre\r\n      return this.http.get<ListModel>(`${ this.url }movielists/${listName}`);\r\n    }\r\n\r\n    // Get a tmdb para traer cada película por el id de imdb\r\n    getMovie(imbdID: string): Observable<Movie> {\r\n      return this.http.get<Movie>(`https://api.themoviedb.org/3/find/${imbdID}?api_key=19d19425f792c26307b9a39737f86892&language=es-MX&external_source=imdb_id`);\r\n    }\r\n\r\n    getMovieDetail(id: string): Observable<MovieDetail>{\r\n      return this.http.get<MovieDetail>(`https://api.themoviedb.org/3/movie/${id}?api_key=19d19425f792c26307b9a39737f86892&language=es-MX&external_source=imdb_id`);\r\n    }\r\n\r\n    getCast(id:string) {\r\n      return this.http.get<MovieCast>(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=19d19425f792c26307b9a39737f86892&language=es-MX&external_source=imdb_id`)\r\n        .pipe( \r\n          map( resp => resp.cast ));\r\n    }\r\n\r\n    // GET a http://miralosmorserver.pythonanywhere.com/api/movieliststag/<tag>\r\n\r\n    // Busqueda de lista con una palabra incluida en los tags de la misma\r\n     searchList(word: string){\r\n      return this.http.get(`${ this.url }movieliststag/${word}`).pipe(delay(1500));\r\n     }\r\n\r\n     addList(list: ListModel){\r\n       return this.http.post(`${ this.url }movielists`, list);\r\n     }\r\n\r\n}\r\n","import { EventColor } from 'calendar-utils';\r\nimport { Department } from './enums';\r\n\r\nexport interface CalendarEvent<MetaType = any>{\r\n    id?: string | number;\r\n    start: Date;\r\n    end?: Date;\r\n    title: string;\r\n    discord: boolean;\r\n    citeClass: string;\r\n    description?: string;\r\n    color?: EventColor;\r\n    actions?: CalendarEventAction[];\r\n    allDay?: boolean;\r\n    cssClass?: string;\r\n    resizable?: {\r\n        beforeStart?: boolean;\r\n        afterEnd?: boolean;\r\n    };\r\n    draggable?: boolean;\r\n    meta?: MetaType;\r\n};\r\n\r\nexport interface CalendarEventAction {\r\n    id?: string | number;\r\n    label: string;\r\n    cssClass?: string;\r\n    a11yLabel?: string;\r\n    onClick({ event, sourceEvent, }: {\r\n        event: CalendarEvent;\r\n        sourceEvent: MouseEvent | KeyboardEvent;\r\n    }): any;\r\n};\r\n\r\n\r\nexport class ListModel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    link: string;\r\n    img: string;\r\n    by: string;\r\n    words: string;\r\n    movies: Movies[];\r\n  }\r\n  export class Movies{\r\n    id: number;\r\n    name: string;\r\n    year: string;\r\n    link: string;\r\n    words: string;\r\n    cast: string;\r\n    imdb_id: string;\r\n    director: string\r\n  }\r\n  \r\n  export interface Movie {\r\n    movie_results:      MovieResult[];\r\n    person_results:     any[];\r\n    tv_results:         any[];\r\n    tv_episode_results: any[];\r\n    tv_season_results:  any[];\r\n  }\r\n  \r\n  export interface MovieResult {\r\n    id:                number;\r\n    video:             boolean;\r\n    vote_count:        number;\r\n    vote_average:      number;\r\n    title:             string;\r\n    release_date:      Date;\r\n    original_language: string;\r\n    original_title:    string;\r\n    genre_ids:         number[];\r\n    backdrop_path:     string;\r\n    adult:             boolean;\r\n    overview:          string;\r\n    poster_path:       string;\r\n    popularity:        number;\r\n  }\r\n  \r\n  export interface MovieDetail {\r\n    adult:                 boolean;\r\n    backdrop_path:         string;\r\n    belongs_to_collection: null;\r\n    budget:                number;\r\n    genres:                Genre[];\r\n    homepage:              string;\r\n    id:                    number;\r\n    imdb_id:               string;\r\n    original_language:     string;\r\n    original_title:        string;\r\n    overview:              string;\r\n    popularity:            number;\r\n    poster_path:           string;\r\n    production_companies:  ProductionCompany[];\r\n    production_countries:  ProductionCountry[];\r\n    release_date:          Date;\r\n    revenue:               number;\r\n    runtime:               number;\r\n    spoken_languages:      SpokenLanguage[];\r\n    status:                string;\r\n    tagline:               string;\r\n    title:                 string;\r\n    video:                 boolean;\r\n    vote_average:          number;\r\n    vote_count:            number;\r\n  }\r\n  \r\n  export interface Genre {\r\n    id:   number;\r\n    name: string;\r\n  }\r\n  \r\n  export interface ProductionCompany {\r\n    id:             number;\r\n    logo_path:      null | string;\r\n    name:           string;\r\n    origin_country: string;\r\n  }\r\n  \r\n  export interface ProductionCountry {\r\n    iso_3166_1: string;\r\n    name:       string;\r\n  }\r\n  \r\n  export interface SpokenLanguage {\r\n    iso_639_1: string;\r\n    name:      string;\r\n  }\r\n  \r\n  \r\n  export interface MovieCast {\r\n    id:   number;\r\n    cast: Cast[];\r\n    crew: Crew[];\r\n  }\r\n  \r\n  export interface Cast {\r\n    cast_id:      number;\r\n    character:    string;\r\n    credit_id:    string;\r\n    gender:       number;\r\n    id:           number;\r\n    name:         string;\r\n    order:        number;\r\n    profile_path: string;\r\n  }\r\n  \r\n  export interface Crew {\r\n    credit_id:    string;\r\n    department:   Department;\r\n    gender:       number;\r\n    id:           number;\r\n    job:          string;\r\n    name:         string;\r\n    profile_path: null | string;\r\n  }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}