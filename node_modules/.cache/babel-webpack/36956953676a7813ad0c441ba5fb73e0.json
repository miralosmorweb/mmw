{"ast":null,"code":"import { LOCALE_ID } from '@angular/core';\nimport { CalendarEventTitleFormatter } from 'angular-calendar';\nimport { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let CustomEventTitleFormatter = /*#__PURE__*/(() => {\n  class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n    constructor(locale) {\n      super();\n      this.locale = locale;\n    } // you can override any of the methods defined in the parent class\n\n\n    month(event) {\n      return `<b>${new DatePipe(this.locale).transform(event.start, 'HH:mm', this.locale)}</b> ${event.title}`;\n    }\n\n    week(event) {\n      return `<b>${new DatePipe(this.locale).transform(event.start, 'HH:mm', this.locale)}</b> ${event.title}`;\n    }\n\n    day(event) {\n      return `<b>${new DatePipe(this.locale).transform(event.start, 'HH:mm', this.locale)}</b> ${event.title}`;\n    }\n\n  }\n\n  CustomEventTitleFormatter.ɵfac = function CustomEventTitleFormatter_Factory(t) {\n    return new (t || CustomEventTitleFormatter)(i0.ɵɵinject(LOCALE_ID));\n  };\n\n  CustomEventTitleFormatter.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomEventTitleFormatter,\n    factory: CustomEventTitleFormatter.ɵfac\n  });\n  return CustomEventTitleFormatter;\n})();","map":null,"metadata":{},"sourceType":"module"}