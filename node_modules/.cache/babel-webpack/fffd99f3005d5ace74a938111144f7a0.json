{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst colors = {\n  red: {\n    primary: '#dc143c',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#0000ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#ffff00',\n    secondary: '#FDF1BA'\n  }\n};\nexport let EventsService = /*#__PURE__*/(() => {\n  class EventsService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://miralosmorserver.pythonanywhere.com/api/calendar/';\n    }\n\n    getEvents() {\n      return this.http.get(`${this.url}all`).pipe(map(this.createEventsArray));\n    }\n\n    postEvent(event) {\n      return this.http.post(`${this.url}newcite`, event);\n    }\n\n    createEventsArray(eventsObj) {\n      const events = [];\n\n      if (eventsObj === null) {\n        return [];\n      }\n\n      Object.keys(eventsObj).forEach(key => {\n        const event = eventsObj[key];\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n\n        switch (event.citeClass) {\n          case 'Discord':\n            event.color = colors.blue;\n            break;\n\n          case 'Otros':\n            event.color = colors.red;\n            break;\n\n          case 'Lo Cumpleañito':\n            event.color = colors.yellow;\n            break;\n        }\n\n        event.actions = [];\n        events.push(event);\n      });\n      return events;\n    }\n\n    deleteEvent(id) {\n      return this.http.delete(`${this.url}calendar/delcite/${id}`);\n    }\n\n    editEvent(id, event) {\n      return this.http.put(`${this.url}calendar/delcite/${id}`, event);\n    }\n\n  }\n\n  EventsService.ɵfac = function EventsService_Factory(t) {\n    return new (t || EventsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EventsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventsService,\n    factory: EventsService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventsService;\n})();","map":null,"metadata":{},"sourceType":"module"}